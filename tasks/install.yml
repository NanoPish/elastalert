---
- name: Installing dependencies of elastalert
  package:
    name: "{{ item }}"
  with_items:
    - python3
    - python3-pip
    - python3-dev
    - libffi-dev
    - libssl-dev

- name: Install setuptools 11.3 module using pip3
  pip:
    name:
      - setuptools>=11.3
    executable: pip3

- name: Installing PyYAML dependency
  shell: "pip3 install -U PyYAML"
  args:
    executable: /bin/bash

- name: "Unarchiving elastalert {{ elastalert_version }}"
  unarchive:
    src: "https://github.com/Yelp/elastalert/archive/v{{ elastalert_version }}.tar.gz"
    dest: "{{ installation_dir }}"
    remote_src: yes
  register: task_result
  until: task_result is succeeded
  retries: 5
  delay: 5
    
- name: Creating system group for elastalert
  group:
    name: "{{ elastalert_service_group_name }}"
    state: present

- name: Creating system user for elastalert
  user:
    name: "{{ elastalert_service_user_name }}"
    group: "{{ elastalert_service_group_name }}"
    system: yes
    state: present

- name: Renaming elastalert downloaded directory for ease of use
  copy:
    src: "{{ installation_dir }}/elastalert-{{ elastalert_version }}/"
    dest: "{{ installation_dir }}/elastalert"
    owner: "{{ elastalert_service_user_name }}"
    group: "{{ elastalert_service_group_name }}"
    remote_src: yes
 
- name: Setting ownership of elastalert configuration directory
  file:
    path: "{{ elastalert_data_dir }}"
    state: directory
    recurse: yes
    owner: "{{ elastalert_service_user_name }}"
    group: "{{ elastalert_service_group_name }}"

- name: Installation of elastalert 
  shell: "python3 /opt/elastalert/setup.py install"
  args:
    executable: /bin/bash

- name: Installation modules from local path
  shell: "pip3 install -e /opt/elastalert/."
  args:
    executable: /bin/bash
    
- name: Copying rules into elastalert rules directory
  copy:
    src: "{{ elastalert_rules_file }}"
    dest: "{{ elastalert_rules_dir }}"
    remote_src: yes
  ignore_errors: true    
...
